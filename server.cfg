//
// server.cfg
//

// NOTE: More parameters and details are available at http://community.bistudio.com/wiki/server.cfg

// STEAM PORTS (not needed anymore, it is +1 +2 to gameport)
// steamPort = 8766;
// Default 8766, needs to be unique if multiple servers are on the same box
// steamQueryPort = 27016;
// Default 27016, needs to be unique if multiple servers are on the same box

// GENERAL SETTINGS
hostname = "Sandwish tawouk";
// Name of the server displayed in the public server list
password = "toum";
// Password required to join the server (remove // at start of line to enable)
passwordAdmin = "extratoum";
// Password to login as admin. Open the chat and type: #login password
//serverCommandPassword = "extratoumextrakabis";
// Password required by alternate syntax of [[serverCommand]] server-side scripting.
maxPlayers = 64;
// Maximum amount of players, including headless clients. Anybody who joins the server is considered a player, regardless of their role or team.
persistent = 0;
// If set to 1, missions will continue to run after all players have disconnected; required if you want to use the -autoInit startup parameter

// VOICE CHAT
disableVoN = 0;
// If set to 1, voice chat will be disabled
//vonCodec = 1;
// If set to 1 then it uses IETF standard OPUS codec, if to 0 then it uses SPEEX codec (since Arma 3 v1.58)
vonCodecQuality = 30;
// Supports range 1-30, the higher the better sound quality, the more bandwidth consumption:
// 1-10 is 8kHz (narrowband)
// 11-20 is 16kHz (wideband)
// 21-30 is 32kHz (ultrawideband)

// VOTING
voteMissionPlayers = 1;
// Minimum number of players required before displaying the mission selection screen, if you have not already selected a mission in this config
voteThreshold = 0.33;
// Percentage (0.00 to 1.00) of players needed to vote something into effect, for example an admin or a new mission. Set to 9999 to disable voting.
//allowedVoteCmds[] =
//{
// // { command, preinit, postinit, threshold } - specifying a threshold value will override "voteThreshold" for that command
// { "admin", false, false}, // vote admin
// { "kick", false, true, 0.51}, // vote kick
// { "missions", false, false}, // mission change
// { "mission", false, false}, // mission selection
// { "restart", false, false}, // mission restart
// { "reassign", false, false} // mission restart with roles unassigned
//};
allowedVoteCmds[] = {};
// Voting commands allowed to players

// WELCOME MESSAGE ("message of the day")
// It can be several lines, separated by comma
// Empty messages "" will not be displayed, but can be used to increase the delay before other messages
motd[] =
{
 "", "",
 "You do not put lettuce or tomato in a chicken shawarma",
 "You just can't. Only garlic (toum) and pickles, maybe fries",
 "With beef shawarma use parsley, tomato, onions, and hummus as sauce",
 "And please don't add olive oil or mayo or ketchup",
 "Recommendations: Jabbour (Dawra), Zahraa (Borj l Barajne)",
 "", ""
};
motdInterval = 5;
// Number of seconds between each message

// MISSIONS CYCLE
//class Missions
//{
// class Mission1
// {
// template = "MyMission.Altis"; // Filename of pbo in MPMissions folder
// difficulty = "Regular"; // "Recruit", "Regular", "Veteran", "Custom"
// };
//};
//randomMissionOrder = true;
// Randomly iterate through Missions list
//autoSelectMission = true;
// Server auto selects next mission in cycle
class Missions {};
// An empty Missions class means there will be no mission rotation
missionWhitelist[] = {};
// An empty whitelist means there is no restriction on what missions' available

// LOGGING
timeStampFormat = "short";
// Timestamp format used in the server RPT logs. Possible values are "none" (default), "short", "full"
logFile = "server_console.log";
// Server console output filename

// SECURITY
BattlEye = 1;
// If set to 1, BattlEye Anti-Cheat will be enabled on the server (default: 1, recommended: 1)
verifySignatures = 2;
// If set to 2, players with unknown or unsigned mods won't be allowed join (default: 0, recommended: 2)
kickDuplicate = 1;
// If set to 1, players with an ID that is identical to another player will be kicked (recommended: 1)
allowedFilePatching = 0;
// Prevents clients with filePatching enabled from joining the server
// (0 = block filePatching, 1 = allow headless clients, 2 = allow all) (default: 0, recommended: 1)

//requiredBuild = 12345;
// Require clients joining to have at least build 12345 of game, preventing obsolete clients to connect
//filePatchingExceptions[] = { "123456789", "987654321" };
// Whitelisted Steam IDs allowed to join with -filePatching enabled

// FILE EXTENSIONS
allowedLoadFileExtensions[] = { "hpp", "sqs", "sqf", "fsm", "cpp", "paa", "txt", "xml", "inc", "ext", "sqm", "ods", "fxy", "lip", "csv", "kb", "bik", "bikb", "html", "htm", "biedi" };
// Only allow files with those extensions to be loaded via loadFile command (since Arma 3 v1.20)
allowedPreprocessFileExtensions[] = { "hpp", "sqs", "sqf", "fsm", "cpp", "paa", "txt", "xml", "inc", "ext", "sqm", "ods", "fxy", "lip", "csv", "kb", "bik", "bikb", "html", "htm", "biedi" };
// Only allow files with those extensions to be loaded via preprocessFile / preprocessFileLineNumbers commands (since Arma 3 v1.20)
allowedHTMLLoadExtensions[] = { "htm", "html", "php", "xml", "txt" };
// Only allow files and URLs with those extensions to be loaded via htmlLoad command (since Arma 3 v1.28)

// EVENT SCRIPTS - see http://community.bistudio.com/wiki/Arma_3:_Server_Side_Scripting
onUserConnected = "";
// Command to run when a player connects
onUserDisconnected = "";
// Command to run when a player disconnects
doubleIdDetected = "";
// Command to run if a player has the same ID as another player in the server

// SIGNATURE VERIFICATION
onUnsignedData = "kick (_this select 0)";
// Command to run if a player has unsigned files
onHackedData = "kick (_this select 0)";
// Command to run if a player has tampered files
//onDifferentData = "";
// Command to run if a player has data with a valid signature, but different version than the one present on server detected

// HEADLESS CLIENT
//headlessClients[] = { "127.0.0.1" };
// List of IP addresses allowed to connect using headless clients; example: { "127.0.0.1", "192.168.1.100" };
//localClient[] = { "127.0.0.1" };
// List of IP addresses to which are granted unlimited bandwidth; example: { "127.0.0.1", "192.168.1.100" };

// TIMEOUTS
//disconnectTimeout = 5;
// Time to wait before disconnecting a user which temporarly lost connection. Range is 5 to 90 seconds.
//maxDesync = 150;
// Max desync value until server kick the user
//maxPing = 200;
// Max ping value until server kick the user
//maxPacketLoss = 50;
// Max packetloss value until server kick the user
//lobbyIdleTimeout = 300;
// The amount of time the server will wait before force-starting a mission without a logged-in Admin.
//votingTimeOut[] = { 60, 90 };
// Kicks users from server if they spend too much time in mission voting
//roleTimeOut[] = { 90, 120 };
// Kicks users from server if they spend too much time in role selection
//briefingTimeOut[] = { 60, 90 };
// Kicks users from server if they spend too much time in briefing (map) screen
//debriefingTimeOut[] = { 45, 60 };
// Kicks users from server if they spend too much time in debriefing screen
//kickClientsOnSlowNetwork[] = { 0, 0, 0, 0 };
// Defines if {<MaxPing>, <MaxPacketLoss>, <MaxDesync>, <DisconnectTimeout>} will be logged (0) or kicked (1)
//kickTimeout[] = { { 0, -1 }, { 1, 180 }, { 2, 180 }, { 3, 180 } };

// fix packet too small 
steamProtocolMaxDataSize = 4096;